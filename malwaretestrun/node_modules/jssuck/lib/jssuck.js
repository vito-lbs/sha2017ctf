// Generated by LispyScript v1.0.0
(function() {
    var path = require('path'),
        fs = require('fs'),
        decode = require('./unfuck.js'),
        encode = require('./fuck.js');
    var print_or_save = function(data,filepath,pretty,save,fuck_or_unfuck) {
        return (save ?
            (function() {
                var dirname = path.dirname(filepath),
                    basename = path.basename(filepath,'.js'),
                    extname = path.extname(filepath),
                    newpath = (dirname + '/' + basename + '.' + fuck_or_unfuck + extname);
                return fs.writeFile(newpath,data,function(err) {
                    console.log(('Writing ' + newpath));
                    return (err ?
                        (function() {
                            return console.error(("ERROR: Couldn't save " + newpath + '\n'));
                        })() :
                        undefined);
                });
            })() :
            (function() {
                console.log(data);
                return console.log('\n');
            })());
    };
    var autorun = function(argv) {
        ((argv.length < 3) ?
            (function() {
                var message = ("Usage: jssuck [OPTION]... [FILE]...\n\n" + "JSSuck takes multiple files and both directions at once.\n" + "Just put the files that you want to do encode or decode.\n\n" + "Encoding:\n" + "  -1: Process jsfuck [DEFAULT]\n" + "  -2: Process uglified jsfuck.\n" + "Decoding:\n" + "  -p: Enable pretty print. This option is unactivated in default.\n" + "Output:\n" + "-s: Store the result in each files. Default is stdout.");
                console.error(message);
                return process.exit(-2);
            })() :
            undefined);
        var options = {pretty: false, lv1: true, lv2: false, save: false, files: []};
        argv.shift();
        argv.shift();
        (argv).forEach(function(arg,index,list) {
            return (('-1' === arg) ?
                options['lv1'] = true :
                (('-2' === arg) ?
                    options['lv2'] = true :
                    (('-p' === arg) ?
                        options['pretty'] = true :
                        (('-s' === arg) ?
                            options['save'] = true :
                            (true ?
                                (function() {
                                    var stat = fs.statSync(arg);
                                    return (stat.isFile() ?
                                        (function() {
                                            return options['files'].push(arg);
                                        })() :
                                        undefined);
                                })() :
                                undefined)))));
        });
        return (options['files']).forEach(function(file,index,list) {
            var data = fs.readFileSync(file,('utf8'));
            return ((-1 === (data.replace(/\s+/g,'')).search(/[^()\[\]+!]/)) ?
                print_or_save(decode(data,options['pretty']),file,options['pretty'],options['save'],'unfuck') :
                print_or_save(encode(data,(options['lv1'] === options['lv2'])),file,false,options['save'],'fuck'));
        });
    };
    var jssuck = {encode: encode,
    decode: decode,
    autorun: autorun};
    module.exports = jssuck;
})();
